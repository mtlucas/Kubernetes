# RabbitMQ operator via helm:
#
#     https://www.rabbitmq.com/kubernetes/operator/install-operator.html
#
# helm repo add bitnami https://charts.bitnami.com/bitnami
# helm repo update
# helm install rabbitmq-operator bitnami/rabbitmq-cluster-operator --namespace rabbitmq --create-namespace
#
---
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: rabbitmq-cluster
  namespace: rabbitmq
spec:
  replicas: 2
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: topology.kubernetes.io/zone
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - rabbitmq
        - weight: 100
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - rabbitmq
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 750Mi
  rabbitmq:
    additionalConfig: |
      log.console.level = info
      channel_max = 1700
      default_user= guest
      default_pass= guest
      default_user_tags.administrator = true
      cluster_partition_handling = pause_minority
      vm_memory_high_watermark_paging_ratio = 0.99
      disk_free_limit.relative = 1.0
      collect_statistics_interval = 10000
  persistence:
    storageClassName: freenas-iscsi-csi
    storage: "5Gi"
  override:
    statefulSet:
      spec:
        template:
          spec:
            containers: []
            topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: "topology.kubernetes.io/zone"
              whenUnsatisfiable: ScheduleAnyway
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: rabbitmq-cluster
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: first-pool
  labels:
    app: rabbitmq-cluster
  name: rabbitmq
  namespace: rabbitmq
spec:
  ports:
  - port: 5672
    targetPort: 5672
    name: tcp
    protocol: TCP
  - name: api
    protocol: TCP
    port: 15672
    targetPort: 15672
  - name: metrics
    protocol: TCP
    port: 15692
    targetPort: 15692
  selector:
    app.kubernetes.io/name: rabbitmq-cluster
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rabbitmq-admin
  namespace: rabbitmq
  annotations:
    app: rabbitmq-cluster
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '30'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '1800'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '1800'
spec:
  tls:
    - hosts:
        - rabbitmq-admin.lucasnet.int
      secretName: lucasnet-tls
  rules:
    - host: rabbitmq-admin.lucasnet.int
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rabbitmq-cluster
                port:
                  number: 15672
