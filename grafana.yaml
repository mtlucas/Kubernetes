# Grafana:  https://hub.docker.com/r/grafana/grafana

# kubectl create secret generic grafana-creds \
#   --from-literal=GF_SECURITY_ADMIN_USER=admin \
#   --from-literal=GF_SECURITY_ADMIN_PASSWORD=

# Reference:  https://medium.com/starschema-blog/monitor-your-infrastructure-with-influxdb-and-grafana-on-kubernetes-a299a0afe3d2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data-dir-pvc
  namespace: monitoring
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: monitoring
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: grafana-creds
        image: docker.io/grafana/grafana:8.5.15
        name: grafana
        volumeMounts:
          - name: data-dir
            mountPath: /var/lib/grafana/
      securityContext:
        fsGroup: 472
      volumes:
       - name: data-dir
         persistentVolumeClaim:
           claimName: grafana-data-dir-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  ports:
  - port: 3000
    name: http
    targetPort: 3000
  selector:
    app: grafana
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '30'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '1800'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '1800'
spec:
  tls:
    - hosts:
      - grafana.lucasnet.int
      - grafana.lucasnet.org
      secretName: lucasnet-tls
  rules:
    - host: grafana.lucasnet.int
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: grafana
              port:
                number: 3000
