# Redis helm install:
#
# helm repo add bitnami https://charts.bitnami.com/bitnami
# helm repo update
# helm install redis bitnami/redis --namespace redis --create-namespace
#
# Install redis CLI:
#
# export REDIS_PASSWORD=$(kubectl get secret --namespace redis redis -o jsonpath="{.data.redis-password}" | base64 -d)
# kubectl run --namespace redis redis-client --restart='Never'  --env REDIS_PASSWORD=$REDIS_PASSWORD  --image docker.io/bitnami/redis:7.0.7-debian-11-r7 --command -- sleep infinity
# 

# Redis operator:
#
# helm repo add redis-operator https://spotahome.github.io/redis-operator
# helm repo update
# helm install redis-operator redis-operator/redis-operator
# helm upgrade redis-operator redis-operator/redis-operator
#
# Tweaks:
# helm upgrade redis bitnami/redis --namespace redis --set replica.replicaCount=1 --set numberOfPrimaries=1
#
# NAME: redis
# LAST DEPLOYED: Thu Jan 19 14:25:17 2023
# NAMESPACE: redis
# STATUS: deployed
# REVISION: 8
# TEST SUITE: None
# NOTES:
# CHART NAME: redis
# CHART VERSION: 17.4.3
# APP VERSION: 7.0.8

# ** Please be patient while the chart is being deployed **

# Redis&reg; can be accessed on the following DNS names from within your cluster:

#     redis-master.redis.svc.cluster.local for read/write operations (port 6379)
#     redis-replicas.redis.svc.cluster.local for read-only operations (port 6379)



# To get your password run:

#     export REDIS_PASSWORD=$(kubectl get secret --namespace redis redis -o jsonpath="{.data.redis-password}" | base64 -d)

# To connect to your Redis&reg; server:

# 1. Run a Redis&reg; pod that you can use as a client:

#    kubectl run --namespace redis redis-client --restart='Never'  --env REDIS_PASSWORD=$REDIS_PASSWORD  --image docker.io/bitnami/redis:7.0.8-debian-11-r0 --command -- sleep infinity

#    Use the following command to attach to the pod:

#    kubectl exec --tty -i redis-client \
#    --namespace redis -- bash

# 2. Connect using the Redis&reg; CLI:
#    REDISCLI_AUTH="$REDIS_PASSWORD" redis-cli -h redis-master
#    REDISCLI_AUTH="$REDIS_PASSWORD" redis-cli -h redis-replicas

# To connect to your database from outside the cluster execute the following commands:

#     kubectl port-forward --namespace redis svc/redis-master 6379:6379 &
#     REDISCLI_AUTH="$REDIS_PASSWORD" redis-cli -h 127.0.0.1 -p 6379

# Use the following to kick off a cluster using operator:
apiVersion: databases.spotahome.com/v1
kind: RedisFailover
metadata:
  name: redisfailover
spec:
  sentinel:
    replicas: 1
    resources:
      requests:
        cpu: 100m
      limits:
        memory: 100Mi
  redis:
    replicas: 1
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 200m
        memory: 250Mi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-lb
  namespace: redis
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/component: master
spec:
  ports:
    - name: redis-tcp
      protocol: TCP
      port: 6379
      targetPort: 6379
  selector:
    app.kubernetes.io/instance: redis
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  allocateLoadBalancerNodePorts: true
  internalTrafficPolicy: Cluster
