# Metricbeat helm install:
#
# helm repo add elastic https://helm.elastic.co
# helm repo update
# helm install metricbeat elastic/metricbeat --namespace logging -f .\metricbeats.yaml --version 7.17.3 # Version matches ES cluster version
#
# W0302 12:45:04.531959   39292 warnings.go:70] spec.template.spec.containers[0].env[7].name: duplicate name "NODE_NAME"
# NAME: metricbeat
# LAST DEPLOYED: Thu Mar  2 12:45:03 2023
# NAMESPACE: logging
# STATUS: deployed
# REVISION: 1
# TEST SUITE: None
# NOTES:
# 1. Watch all containers come up.
#   $ kubectl get pods --namespace=logging -l app=metricbeat-metricbeat -w
#
# Config for helm chart:
---
daemonset:
  enabled: true
  extraEnvs:
    - name: 'ELASTICSEARCH_USERNAME'
      value: elastic
    - name: 'ELASTICSEARCH_PASSWORD'
      value: CHANGE_ME
    - name: 'ELASTICSEARCH_HOST'
      value: elasticsearch-1-es-http.elastic-system.svc.cluster.local
    - name: 'ELASTICSEARCH_PORT'
      value: "9200"
    - name: 'KIBANA_HOST'
      value: kibana-1-kb-http.elastic-system.svc.cluster.local
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  hostNetworking: false
  metricbeatConfig:
    metricbeat.yml: |
      metricbeat.modules:
      - module: kubernetes
        metricsets:
          - container
          - node
          - pod
          - system
          - volume
        period: 2s
        host: "${NODE_NAME}"
        hosts: ["https://${NODE_NAME}:10250"]
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        ssl.verification_mode: "none"
        processors:
        - add_kubernetes_metadata: ~
      - module: kubernetes
        enabled: true
        metricsets:
          - event
      - module: system
        period: 10s
        metricsets:
          - cpu
          - load
          - memory
          - network
          - process
          - process_summary
        processes: ['.*']
        process.include_top_n:
          by_cpu: 5
          by_memory: 5
        processors:
        - drop_event.when.regexp:
            system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'
      output.elasticsearch:
        hosts: ['${ELASTICSEARCH_HOST}:9200']
        protocol: https
        username: ${ELASTICSEARCH_USERNAME}
        password: ${ELASTICSEARCH_PASSWORD}
        ssl.enabled: true
        ssl.verification_mode: "none"
      setup.kibana:
        host: "${KIBANA_HOST}:5601"
        protocol: https
        username: ${ELASTICSEARCH_USERNAME}
        password: ${ELASTICSEARCH_PASSWORD}
        ssl.enabled: true
        ssl.verification_mode: "none"
  securityContext:
    runAsUser: 0
    privileged: true
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "1000m"
      memory: "200Mi"
  tolerations: []
deployment:
  enabled: true
  # Extra environment variables for Metricbeat container.
  envFrom: []
  extraEnvs: 
    - name: 'ELASTICSEARCH_USERNAME'
      value: elastic
    - name: 'ELASTICSEARCH_PASSWORD'
      value: CHANGE_ME
    - name: 'ELASTICSEARCH_HOST'
      value: 'elasticsearch-1-es-http.elastic-system.svc.cluster.local'
    - name: 'ELASTICSEARCH_PORT'
      value: "9200"
    - name: 'KIBANA_HOST'
      value: kibana-1-kb-http.elastic-system.svc.cluster.local
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  metricbeatConfig:
    metricbeat.yml: |
      metricbeat.modules:
      - module: kubernetes
        enabled: true
        metricsets:
          - state_node
          - state_deployment
          - state_replicaset
          - state_pod
          - state_container
        period: 5s
        hosts: ["${KUBE_STATE_METRICS_HOSTS}"]
      output.elasticsearch:
        hosts: ['${ELASTICSEARCH_HOST}:9200']
        protocol: https
        username: ${ELASTICSEARCH_USERNAME}
        password: ${ELASTICSEARCH_PASSWORD}
        ssl.enabled: true
        ssl.verification_mode: "none"
      setup.kibana:
        host: "${KIBANA_HOST}:5601"
        protocol: https
        username: ${ELASTICSEARCH_USERNAME}
        password: ${ELASTICSEARCH_PASSWORD}
        ssl.enabled: true
        ssl.verification_mode: "none"
  securityContext:
    runAsUser: 0
    privileged: true
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "1000m"
      memory: "512Mi"
  tolerations: []
# Replicas being used for the kube-state-metrics metricbeat deployment
replicas: 1
# Root directory where metricbeat will write data to in order to persist registry data across pod restarts (file position and other metadata).
hostPathRoot: /var/lib
image: "docker.elastic.co/beats/metricbeat"
imageTag: "7.17.8"
imagePullPolicy: "IfNotPresent"
imagePullSecrets: []
livenessProbe:
  exec:
    command:
      - sh
      - -c
      - |
        #!/usr/bin/env bash -e
        curl --fail 127.0.0.1:5066
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
# readinessProbe:
#   exec:
#     command:
#       - sh
#       - -c
#       - |
#         #!/usr/bin/env bash -e
#         metricbeat test output
#   failureThreshold: 3
#   initialDelaySeconds: 10
#   periodSeconds: 10
#   timeoutSeconds: 5
# Whether this chart should self-manage its service account, role, and associated role binding.
managedServiceAccount: true
clusterRoleRules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - events
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - nodes/stats
  verbs: ["get"]
# How long to wait for metricbeat pods to stop gracefully
terminationGracePeriod: 30
# This is the PriorityClass settings as defined in
# https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
priorityClassName: ""
updateStrategy: RollingUpdate
kube_state_metrics:
  enabled: true
  # host is used only when kube_state_metrics.enabled: false
  host: ""
